[{"authors":["admin"],"categories":null,"content":"Morphling is a ranged agility hero that has many flexible abilities, item builds and is leveled as a very strong hard carry. He relies strongly on his attributes, and is an effective ganker. Unlike other agility carries that rely on physical attacks, he relies on his powerful abilities to initiate and shift into a state from which he can make a kill.\nWaveform lets him surge directly forward to a location, damaging enemies on his path, working both as a nuke or an escape. Adaptive Strike is a scaling two-part ability that blasts enemies with a jet of water, either stunning and knocking back or dealing damage. (never mindüôåüôåüôåüôåüôåüôå)\n","date":1581465600,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1581465600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Morphling is a ranged agility hero that has many flexible abilities, item builds and is leveled as a very strong hard carry. He relies strongly on his attributes, and is an effective ganker. Unlike other agility carries that rely on physical attacks, he relies on his powerful abilities to initiate and shift into a state from which he can make a kill.\nWaveform lets him surge directly forward to a location, damaging enemies on his path, working both as a nuke or an escape.","tags":null,"title":"Alex Wang","type":"authors"},{"authors":["Alex Wang"],"categories":null,"content":"The color scheme \u0026lsquo;Violet\u0026rsquo; for my home page is as follows:\n# Primary\rprimary = \u0026quot;#aa4465\u0026quot;\r# Menu\rmenu_primary = \u0026quot;#f8f4e3\u0026quot;\rmenu_text = \u0026quot;#aa4465\u0026quot;\rmenu_text_active = \u0026quot;#c08552\u0026quot;\rmenu_title = \u0026quot;#aa4465\u0026quot;\r# Home sections\rbackground = \u0026quot;#f8f4e3\u0026quot;\rhome_section_odd = \u0026quot;#f8f4e3\u0026quot;\rhome_section_even = \u0026quot;#edf0da\u0026quot;\r It briefly disappointed me when I found that all of the default themes for \u0026lsquo;hugo academic\u0026rsquo; did not comfort my eyes well, then I decided to design my own theme.\nThe inspiration for this color scheme partly came from https://coolors.co/\r, during which I hit my space bar for hundreds of timesüôåüôåüôå\n","date":1581465600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581465600,"objectID":"0db373a22b26656a15fea2f2bf8b8a9e","permalink":"/post/color_scheme/","publishdate":"2020-02-12T00:00:00Z","relpermalink":"/post/color_scheme/","section":"post","summary":"The color scheme \u0026lsquo;Violet\u0026rsquo; for my home page is as follows:\n# Primary\rprimary = \u0026quot;#aa4465\u0026quot;\r# Menu\rmenu_primary = \u0026quot;#f8f4e3\u0026quot;\rmenu_text = \u0026quot;#aa4465\u0026quot;\rmenu_text_active = \u0026quot;#c08552\u0026quot;\rmenu_title = \u0026quot;#aa4465\u0026quot;\r# Home sections\rbackground = \u0026quot;#f8f4e3\u0026quot;\rhome_section_odd = \u0026quot;#f8f4e3\u0026quot;\rhome_section_even = \u0026quot;#edf0da\u0026quot;\r It briefly disappointed me when I found that all of the default themes for \u0026lsquo;hugo academic\u0026rsquo; did not comfort my eyes well, then I decided to design my own theme.","tags":null,"title":"Color Scheme 'Violet' for my Home Page","type":"post"},{"authors":["Alex Wang"],"categories":null,"content":"The 5th problem of Leetcode, Longest Palindromic Substring, is the first problem in the set of problems about dynamic programming.\nIn the process of completing and looking through the community, I would like to share a really interesting algorithm named Manacher\u0026rsquo;s algorithm as well as the basic solution by dynamic programming.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nProblem Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.\nExample:\nInput: \u0026quot;babad\u0026quot; Output: \u0026quot;bab\u0026quot; Note: \u0026quot;aba\u0026quot; is also a valid answer.  Dynamic Programming Algorithm To improve over the brute force solution, we first observe how we can avoid unnecessary re-computation while validating palindromes.\nConsider the case \u0026ldquo;ababa\u0026rdquo;. If we already knew that \u0026ldquo;bab\u0026rdquo; is a palindrome, it is obvious that \u0026ldquo;ababa\u0026rdquo; must be a palindrome since the two left and right end letters are the same.\n$$ P\\left (i,j \\right ) = \\left (P \\left (i+1, j-1 \\right )\\ and\\ \\mathbf S_{i} == \\mathbf S_{j}\\right ) $$\nCode c++:\nclass Solution { public: string longestPalindrome(string s) { if(s.empty()) return \u0026quot;\u0026quot;; int n = s.length(); bool isPalindrome[n][n]; fill_n(\u0026amp;isPalindrome[0][0],n*n,false); int maxLength = 0; int startIndex = 0; string result; int i, j; for(j=0; j\u0026lt;n; j++){ for(i=0; i\u0026lt;=j; i++){ isPalindrome[i][j] = (s[i] == s[j]) \u0026amp;\u0026amp; (j-i\u0026lt;=2 || isPalindrome[i+1][j-1] ); if(isPalindrome[i][j] \u0026amp;\u0026amp; j-i+1 \u0026gt; maxLength){ maxLength = j-i+1; startIndex = i; } } } result = s.substr(startIndex, maxLength); return result; } };   The fill_n() function in C++ STL is used to fill some default values in a container. The fill_n() function is used to fill values upto first n positions from a starting position. It accepts an iterator begin and the number of positions n as arguments and fills the first n position starting from the position pointed by begin with the given value.  void fill_n(iterator begin, int n, type value);   In the traversal process, variable j loops in the outer layer, while variable i loops in the inner layer. The reason is as follows.\nFor example, when we want to the value of isPalindrome[2][7], we must know the value of isPalindrome[3][6] and isPalindrome[4][5], which means that we must traverse in the order of variable j.\n  Manacher\u0026rsquo;s Algorithm Algorithm Firstly, we put aside even palindromes and focus on odd palindromes.\nEvery palindrome has a center and a right boundary, and a distance between center and right boundary, which was described as the \u0026lsquo;expansion length\u0026rsquo; of a palindrome. In this algorithm, we create an array P[i] to record the expansion length of an i-centered palindrome, and let Integer c and r to present the index of center and right boundary.\nEg: ‚Äúabacabacabb‚Äù\nWhen going from left to right, when i is at index 3, the longest palindromic substring is ‚Äúabacaba‚Äù, P[3] = 3.\nNormally, we have to traverse from P[1] to P[string.length()-2], but we don‚Äôt need to manually go to each index and expand to check the expansion length every time. This is exactly where Manacher‚Äôs algorithm optimizes better than brute force, by using some insights on how palindromes work. Let‚Äôs see how the optimization is done.\nWhen i = 4, the index is inside the scope of the current longest palindrome, i.e., i \u0026lt; r. So, instead of naively expanding at i, we want to know the minimum expansion length that is certainly possible at i, so that we can expand on that minimum P[i] and see, instead of doing from start. So, we check for mirror i‚Äô.\nAs long as the palindrome at index i‚Äô does NOT expand beyond the left boundary (l) of the current longest palindrome, we can say that the minimum certainly possible expansion length at i is P[i‚Äô].\nRemember that we are only talking about the minimum possible expansion length, the actual expansion length could be more and, we‚Äôll find that out by expanding later on. In this case, P[4] = P[2] = 0. We try to expand but still, P[4] remains 0.\nNow, if the palindrome at index i‚Äô expands beyond the left boundary (l) of the current longest palindrome, we can say that the minimum certainly possible expansion length at i is r-i.\nEg: ‚Äúacacacb‚Äù\nP[3] = 2\nP[2] = 2\nP[4] = 5‚Äì4 = 1\nYou could ask but why can‚Äôt the palindrome centered at i expand after r in this case? If it did, then it would have already been covered with the current center c only. But, it didn‚Äôt. So, P[i] = r-i.\nSo, we can sum the two situations:\nif(i\u0026gt;=right) { P[i] = 0; }else{ P[i] = min(P[MirrorIndex], right-i); }  Code c++:\nclass Solution { public: string longestPalindrome(string s) { string t; int i; for(i=0; i\u0026lt;s.length(); i++){ t += \u0026quot;#\u0026quot;; t += s[i]; } t+=\u0026quot;#\u0026quot;; vector\u0026lt;int\u0026gt; P(t.length(),0); int center = 0; int right = 0; int maxLen = 0; int resultCenter = 0; for(i=1; i\u0026lt;t.length()-1; i++){ int MirrorIndex = center - (i-center); if(i\u0026gt;=right) { P[i] = 0; }else{ P[i] = min(P[MirrorIndex], right-i); } while(i-1-P[i]\u0026gt;=0 \u0026amp;\u0026amp; i+1+P[i]\u0026lt;t.length() \u0026amp;\u0026amp; t[i-1-P[i]] == t[i+1+P[i]]){ P[i]++; } if(i+P[i]\u0026gt;center){ center = i; right = i+P[i]; } if(P[i]\u0026gt;maxLen){ maxLen = P[i]; resultCenter = i; } } return s.substr((resultCenter - maxLen)/2, maxLen); } };  References and Websites \rManacher‚Äôs Algorithm Explained‚Äî Longest Palindromic Substring\rDid you find this page helpful? Consider sharing it üôå ","date":1581465600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581465600,"objectID":"901941e3a4ec88a1609fb1a2493ed240","permalink":"/post/leetcode_5/","publishdate":"2020-02-12T00:00:00Z","relpermalink":"/post/leetcode_5/","section":"post","summary":"The 5th problem of Leetcode, Longest Palindromic Substring, is the first problem in the set of problems about dynamic programming.\nIn the process of completing and looking through the community, I would like to share a really interesting algorithm named Manacher\u0026rsquo;s algorithm as well as the basic solution by dynamic programming.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.","tags":null,"title":"Leetcode - 5. Longest Palindromic Substring and Manacher's Algorothm","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic \rAcademic\r| Documentation\r Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click \rPDF Export\r: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot;\rif porridge == \u0026quot;blueberry\u0026quot;:\rprint(\u0026quot;Eating...\u0026quot;)\r  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}}\r{{% fragment %}} **Two** {{% /fragment %}}\r{{% fragment %}} Three {{% /fragment %}}\r Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}}\r- Only the speaker can read these notes\r- Press `S` key to view\r{{% /speaker_note %}}\r Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view \r  Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}}\r{{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}}\r{{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}\r  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1,\r.reveal section h2,\r.reveal section h3 {\rcolor: navy;\r}\r  Questions? \rAsk\r\rDocumentation\r","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"}]